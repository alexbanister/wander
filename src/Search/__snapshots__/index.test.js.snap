// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search Container should always match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(Search)
    store={
        Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "bucketList": undefined,
      "preferences": Object {
        "departureAirport": "",
      },
      "savePreferences": [Function],
      "searchResults": undefined,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      },
      "updateSearchResults": [Function],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "bucketList": undefined,
        "preferences": Object {
          "departureAirport": "",
        },
        "savePreferences": [Function],
        "searchResults": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        },
        "updateSearchResults": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Search Search should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search
    preferences={
        Object {
            "departureAirport": "",
          }
    }
    savePreferences={[Function]}
    searchResults={Array []}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="searchForm"
>
          <form
                    onSubmit={[Function]}
          >
                    <span
                              className="depart"
                    >
                              <label
                                        htmlFor="departureDate"
                              >
                                        Depart:
                              </label>
                              <input
                                        name="departureDate"
                                        onChange={[Function]}
                                        type="date"
                                        value="2017-12-24"
                              />
                    </span>
                    <span
                              className="return"
                    >
                              <label
                                        htmlFor="returnDate"
                              >
                                        Return:
                              </label>
                              <input
                                        name="returnDate"
                                        onChange={[Function]}
                                        type="date"
                                        value="2018-01-03"
                              />
                    </span>
                    <div
                              className="sendSearch"
                    >
                              <button>
                                        Search
                              </button>
                    </div>
          </form>
</div>,
        <div
          className="searchResults"
>
          
</div>,
      ],
      "className": "search",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <form
            onSubmit={[Function]}
>
            <span
                        className="depart"
            >
                        <label
                                    htmlFor="departureDate"
                        >
                                    Depart:
                        </label>
                        <input
                                    name="departureDate"
                                    onChange={[Function]}
                                    type="date"
                                    value="2017-12-24"
                        />
            </span>
            <span
                        className="return"
            >
                        <label
                                    htmlFor="returnDate"
                        >
                                    Return:
                        </label>
                        <input
                                    name="returnDate"
                                    onChange={[Function]}
                                    type="date"
                                    value="2018-01-03"
                        />
            </span>
            <div
                        className="sendSearch"
            >
                        <button>
                                    Search
                        </button>
            </div>
</form>,
          "className": "searchForm",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="depart"
>
                <label
                                htmlFor="departureDate"
                >
                                Depart:
                </label>
                <input
                                name="departureDate"
                                onChange={[Function]}
                                type="date"
                                value="2017-12-24"
                />
</span>,
              <span
                className="return"
>
                <label
                                htmlFor="returnDate"
                >
                                Return:
                </label>
                <input
                                name="returnDate"
                                onChange={[Function]}
                                type="date"
                                value="2018-01-03"
                />
</span>,
              <div
                className="sendSearch"
>
                <button>
                                Search
                </button>
</div>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    htmlFor="departureDate"
>
                    Depart:
</label>,
                  <input
                    name="departureDate"
                    onChange={[Function]}
                    type="date"
                    value="2017-12-24"
/>,
                ],
                "className": "depart",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Depart:",
                    "htmlFor": "departureDate",
                  },
                  "ref": null,
                  "rendered": "Depart:",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "name": "departureDate",
                    "onChange": [Function],
                    "type": "date",
                    "value": "2017-12-24",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "span",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    htmlFor="returnDate"
>
                    Return:
</label>,
                  <input
                    name="returnDate"
                    onChange={[Function]}
                    type="date"
                    value="2018-01-03"
/>,
                ],
                "className": "return",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Return:",
                    "htmlFor": "returnDate",
                  },
                  "ref": null,
                  "rendered": "Return:",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "name": "returnDate",
                    "onChange": [Function],
                    "type": "date",
                    "value": "2018-01-03",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "span",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <button>
                  Search
</button>,
                "className": "sendSearch",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Search",
                },
                "ref": null,
                "rendered": "Search",
                "type": "button",
              },
              "type": "div",
            },
          ],
          "type": "form",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
          "className": "searchResults",
        },
        "ref": null,
        "rendered": Array [],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="searchForm"
>
            <form
                        onSubmit={[Function]}
            >
                        <span
                                    className="depart"
                        >
                                    <label
                                                htmlFor="departureDate"
                                    >
                                                Depart:
                                    </label>
                                    <input
                                                name="departureDate"
                                                onChange={[Function]}
                                                type="date"
                                                value="2017-12-24"
                                    />
                        </span>
                        <span
                                    className="return"
                        >
                                    <label
                                                htmlFor="returnDate"
                                    >
                                                Return:
                                    </label>
                                    <input
                                                name="returnDate"
                                                onChange={[Function]}
                                                type="date"
                                                value="2018-01-03"
                                    />
                        </span>
                        <div
                                    className="sendSearch"
                        >
                                    <button>
                                                Search
                                    </button>
                        </div>
            </form>
</div>,
          <div
            className="searchResults"
>
            
</div>,
        ],
        "className": "search",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <form
              onSubmit={[Function]}
>
              <span
                            className="depart"
              >
                            <label
                                          htmlFor="departureDate"
                            >
                                          Depart:
                            </label>
                            <input
                                          name="departureDate"
                                          onChange={[Function]}
                                          type="date"
                                          value="2017-12-24"
                            />
              </span>
              <span
                            className="return"
              >
                            <label
                                          htmlFor="returnDate"
                            >
                                          Return:
                            </label>
                            <input
                                          name="returnDate"
                                          onChange={[Function]}
                                          type="date"
                                          value="2018-01-03"
                            />
              </span>
              <div
                            className="sendSearch"
              >
                            <button>
                                          Search
                            </button>
              </div>
</form>,
            "className": "searchForm",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  className="depart"
>
                  <label
                                    htmlFor="departureDate"
                  >
                                    Depart:
                  </label>
                  <input
                                    name="departureDate"
                                    onChange={[Function]}
                                    type="date"
                                    value="2017-12-24"
                  />
</span>,
                <span
                  className="return"
>
                  <label
                                    htmlFor="returnDate"
                  >
                                    Return:
                  </label>
                  <input
                                    name="returnDate"
                                    onChange={[Function]}
                                    type="date"
                                    value="2018-01-03"
                  />
</span>,
                <div
                  className="sendSearch"
>
                  <button>
                                    Search
                  </button>
</div>,
              ],
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      htmlFor="departureDate"
>
                      Depart:
</label>,
                    <input
                      name="departureDate"
                      onChange={[Function]}
                      type="date"
                      value="2017-12-24"
/>,
                  ],
                  "className": "depart",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Depart:",
                      "htmlFor": "departureDate",
                    },
                    "ref": null,
                    "rendered": "Depart:",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "name": "departureDate",
                      "onChange": [Function],
                      "type": "date",
                      "value": "2017-12-24",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "span",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      htmlFor="returnDate"
>
                      Return:
</label>,
                    <input
                      name="returnDate"
                      onChange={[Function]}
                      type="date"
                      value="2018-01-03"
/>,
                  ],
                  "className": "return",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Return:",
                      "htmlFor": "returnDate",
                    },
                    "ref": null,
                    "rendered": "Return:",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "name": "returnDate",
                      "onChange": [Function],
                      "type": "date",
                      "value": "2018-01-03",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "span",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": <button>
                    Search
</button>,
                  "className": "sendSearch",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Search",
                  },
                  "ref": null,
                  "rendered": "Search",
                  "type": "button",
                },
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "searchResults",
          },
          "ref": null,
          "rendered": Array [],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
